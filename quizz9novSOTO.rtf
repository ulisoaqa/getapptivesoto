{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. Escriba los pasos a seguir para instalar y abrir una aplicaci\'f3n en un simulador \
	1. Iniciar Appium server\
		1.1. star server Appium \
	2. Iniciar Android Studio para abrir el AVD\
		2.1. Selecionar opcion AVD \
		2.2. Iniciar AVD con el que se realizar\'e1 el test\
	3. Generar un capabilites de manera local en el Appium server o en un proyecto java macen.\
	4. Star session con las configuraciones de un json que contendr\'e1 las caracter\'edsticas de las capabilities.\
	5. Esto genera abrir el app de pruebas y muestra el app en el avd\
\
\
2. Describa los siguientes conceptos de POO\
	Clase:  es donde se generar\'e1 las caracter\'edsticas que posee el objeto como sus atributos, campos, m\'e9todos acceseres, y constructores \
		    Existen  tipos de clases donde puedes tener clases padre, clases hijos y super clases donde se pueden utilizar los conceptos de herencia y polimorfismo\
	\
	metodo:  es una funci\'f3n o una acci\'f3n que describe un comportamiento del objeto permitiendo as\'ed generar acciones o actividades que permiten identificar tareas en un objeto como ej, m\'e9todos como correr(), caminar(), saltar()\
	\
	objeto: es una representaci\'f3n de un elemento que contiene las caracter\'edsticas  de un modelo con las propiedades que puede tomar de una clase y que contendr\'e1 o no atributos p\'fablicos o privados para su implementaci\'f3n en las asignaciones o \
        Accesos a los campos del elemento.\
\
	Herencia:  Propiedad en java que permite estructurar de una manera reutilizable ciertas caracteristiecas que clases pueden compartir en m\'e9todos, atributos o recursos de actividades.\
\
	instancia:  es la manera de hacer referencia a objetos en una clase  que permite utilizar sus llaves, m\'e9todos y atributos p\'fablicos donde  fe:  claseEj obA = new claseEj ();  \
\
	Atributos: es las caracter\'edsticas o propiedades que puede describir mas a un objeto como: nombre, edad, estatura\
\
3. Con reglas de negocios de futbol realizar una descripci\'f3n de ejemplo de cada uno de los conceptos anteriores\
      La clase padre de puede llamar futbolista, m\'e9todos como: tiararPenal(); LanzarPelota; herencia puede ser dos clases llamadas: FutbolistaBrasile\'f1o  con atributo como JogaBonito y FutbolitstaMexicano con atributo de agresividad\
\
4. \'bfQue es maven?\
Es un estilo de programaci\'f3n o framework que permite generar proyectos que pueden generarse para utilizar repositorios de manera local o en un repositorio externo para cargar y crear proyectos en este caso de pruebas para web o m\'f3viles\
Maven contiene un ciclo de vida que parte de acciones que se van realizando dede su ejecuci\'f3n hasta la finalizaci\'f3n del proyecto como: test, compile, build etc. Parte de un POM donde se generar las llamadas a las dependencias o caracter\'edsticas del\
Proyecto\
\
5. \'bfQue comando se necesita para crear un proyecto MAVEN?\
	Mvn create projectExample1\
\
6. Mencione para que sirve el archivo POM y describa las siguientes partes de el archivo.\
Es donde se encuentran las dependencias del proyecto y se declaran las versiones a utilizar en este caso como junit, testNg, selenium, etc\
7. Menciones que comando de Maven se limpian las dependencias\
	mvn clean\
8. Menciones que comando de Maven realiza una verificaci\'f3n de sintaxis en la app\
	mvn build \
9. Que comando se crea el paquete de la app\
   	mvn compile\
10. Mencione el comando para correr una app maven\
	mvn -P test \'93nombredelApp\'94\
11. Que es Git y para que sirve\
Es un manejador de versiones local que permite tener proyectos de colaboraci\'f3n donde se pueden generar sobre un mismo proyecto mejoras o features del mismo con diferentes colaboradores donde por cada mejora o cambio se puede generar \
Un cambio o mejoras dentro el proyecto que cada colaborador tiene con sus nuevos cambios ademas permitir por manejo de ramas una versi\'f3n llamada test, master y local para un mejor control de versionamiento. \
12. \'bfQue es un repositorio? \
Es un directorio donde se encuentra un proyecto, que se puede usar para participar en desarrollo colaborativo o manejar versiones de un mismo proyecto.\
\
13. Mencione el comando para traer cambios de versi\'f3n de un proyecto a una versi\'f3n local\
git clone \'93nombreDelRepositorio\'94\
Es como un directorio donde puedes tener contenido tu proyecto, puede ser publico privado o compartido existen repositorios web como GitHub, gitlab, bitbucket. Que permiten tener contenido el proyecto a utilizar. \
14. Mencione el comando que para salvar cambios de tu repositorio local \
	git add \
15. Que comando se usa para crear una rama\
	git branch nuevaRama\
\
16. git checkout -b newRama\
17. Que comando se utiliza para enviar tus cambios a un repositorio remoto\
	git push \
18. A que se refiere el concepto de integraci\'f3n continua. \
 A que se realizan cambios por por cada  integrante de equipo y se generan un merge con las nuevas caracter\'edsticas donde el proyecto puede hacerse mas sostenible y mas robusto con mas caracter\'edsticas\
19. Menciona los selectors que conozcas y el orden de prioridad\
Find by Xpath\
Find by relative xpath \
Find by name\
Find by class\
Find by id\
20. Que es un FrameWork \
Es un marco de trabajo que posee caracter\'edsticas propias para generar proyectos con base a dicho paradigma de programaci\'f3n por ejemplo. (Page objeto model o Page Factory)\
21. Que es un Page Object Pattern \
Es un modelo de programaci\'f3n que es orientado a eventos que puede contener cada pagina en este caso como actividades o eventos. \
Adem\'e0s incluye clases de configuraci\'f3n de driver, capabilites, Properties, testesuites, metos o rutinas de test,  paketes orientados a pages clases  \
Recursos de propiedades y aplicaciones. \
22. Describir clase en pantalla \
	1. La clase my driver hereda de otra clase llamada de donde se utilizar\'e0 metodos  de driver configuration\
	2. Se generan la variable log que permitir\'e1 ver lo que se realiza en la ejecuci\'f3n del proyecto\
	3. Se genera un controlador de tipo android driver  android\
	4. A continuaci\'f3n se genera una funci\'f3n que prepara las capabilities que recibir\'e0 el Android derive declarado en paso 3 \
	4.1 se generan las caracter\'edsticas de las capabilities para que el driver reconozca al dispositivo a usar con sus campos de \
	Nombre del SO, version de dispositivo, nombre del dispositivo, el nombre del paquete app, la actividad a ejecutar  y permisos de del app\
	Es como un jsonObject que contiene las caracter\'edsticas de nuestro dispositivo y app a ejecutar. Se envia con getDriver lo que se configura en paso 2.\
}